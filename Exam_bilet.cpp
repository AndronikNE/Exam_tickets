// Exam_bilet.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <Windows.h>

using namespace std;

//Инициализация дин.массива
int* initArray(int* M, int Size) {
    M = new int[Size];
    return M;
}


int Integer(int& random, int& x)
{
    int temp = 0;
    if (random > x)
    {
        temp = random / x;
        random = random - temp * x;
    }
    return random;
}

void addElement(int**& A, int& n)
{
    int** newArray = nullptr;
    newArray = initArray(newArray, n + 1);
        
    deleteMatrix(A, n);
    n = n + 1; //изменяем количество 'строкэлементов в массиве на 1
    A = newArray;

}// функция добавления новой строки в матрицу



int main()
{
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);

    int x = 0; //количество билетов
    int random = 0; // переменная для ввода номера билета
    int student = 0; // порядковый номер студента
    int i = 0; // счетчик элементов массива
    int tickets = 0;


    cout << "Введите общее количество билетов: ";
    cin >> x;

    const int n = x; //переменная для размера массива
    int* M = nullptr; // объявление указателя
    M = initArray(M, n);

    int M[n]; // массив для хранения вытянутых билетов

    while (true) // пока идет экзамен (пока вытягивают билеты)
    {
        student++;

        i++; // увеличиваем счетчик массива
        cout << "\nВведите номер билета: (0 - выход из программы)";
        loop:
        cin >> random;

        tickets = Integer(random, x);
        for (int k = 0; k < n; k++)
        {
            if (M[k] == tickets);
            {
                cout << "\nБилет №" << tickets << " уже был. Выберите другой билет: ";
                goto loop;
            }
            else M[k] = tickets;
        }
        

    }





    
    cout << "\n";
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
